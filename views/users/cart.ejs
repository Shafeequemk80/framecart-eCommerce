<%- include("../layouts/header.ejs")%>

<div class="page-wrapper">
  <%- include("../layouts/userNavbar.ejs")%>

  <main class="main">
    <div
      class="page-header text-center"
      style="background-image: url('/static/assets/images/page-header-bg.jpg')"
    >
      <div class="container">
        <h1 class="page-title">Shopping Cart<span>Shop</span></h1>
      </div>
      <!-- End .container -->
    </div>
    <!-- End .page-header -->
    <nav aria-label="breadcrumb" class="breadcrumb-nav">
      <div class="container">
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="index.html">Home</a></li>
          <li class="breadcrumb-item"><a href="#">Shop</a></li>
          <li class="breadcrumb-item active" aria-current="page">
            Shopping Cart
          </li>
        </ol>
      </div>
      <!-- End .container -->
    </nav>
    <!-- End .breadcrumb-nav -->

    <div class="page-content">
      <div class="cart">
        <div class="container">
          <div class="row">
            <div class="col-lg-9">
              <table class="border table table-cart table-mobile">
                <thead>
                  <tr>
                    <th class>Product</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th></th>
                  </tr>
                </thead>

                <tbody>
                  <%if(cartData&& cartData.products && cartData.products.length> 0) {
                    for(var i=0;i< cartData.products.length;i++){ %>
                  <tr>
                    <td class="product-col">
                      <div class="product">
                        <figure class="product-media">
                          <a
                            href="/product?id=<%= cartData.products[i].product._id %>"
                          >
                            <img
                              src="/static/productsImages/<%= cartData.products[i].product.images.image1 %>"
                              alt="Product image"
                            />
                          </a>
                        </figure>

                        <div>
                          <div> 
                            <h3 class="product-title">
                           <a
                             href="/product?id=<%= cartData.products[i].product._id %>"
                             ><%= cartData.products[i].product.productname %></a
                           >
                         </h3>
                       </div>
                          <div>
                            <% if (cartData.products[i].count >= cartData.products[i].product.stock) { %>
                              <p id="nostock" class="text-danger"></p>
                            <% } %>
                          </div>
                         </div>
                        <!-- End .product-title -->
                      </div>
                      <!-- End .product -->
                    </td>

                    <td
                      class="price-col .product-price"
                      id="priceColumn_<%= cartData.products[i].product._id %>"
                    >
                      <%=cartData.products[i].product.discountprice==null? cartData.products[i].product.price: cartData.products[i].product.discountprice %>
                    </td>
                    <td class="quantity-col">
                      <div class="cart-product-quantity">
                        
                          <div
                            class="cart-product-quantity d-flex flex-row w-75"
                          >
                            <button
                              class="quantity-decrease123 px-3"
                              
                            >
                              -
                            </button>
                            <input
                              type="number"
                              class="form-control-cart quantity-input text-center "
                              value="<%= cartData.products[i].count %>"
                              min="1"
                              data-product-id="<%=cartData.products[i].product._id %>"
                              max="10"
                              id="qty<%=cartData.products[i].product._id %>"
                              data-decimals="0"
                              required readonly
                            />

                            <button
                              class="quantity-increase123 px-3"
                              
                            >
                              +
                            </button>
                          </div>
                        
                      </div>
                      <!-- End .cart-product-quantity -->
                    </td>
                    <td class="total-price">
                      <%= (cartData.products[i].product.discountprice==null? cartData.products[i].product.price: cartData.products[i].product.discountprice * cartData.products[i].count).toFixed(2) %>

                    </td>

                    <td class="remove-col">
                      <a href="#" id="deleteLink"
                      onclick="confirmDelete('<%=cartData.products[i].product._id%>', '<%=cartData.products[i].count%>')">
                     <button class="btn-remove">
                       <i class="icon-close"></i>
                     </button>
                   </a>
                    </td>
                  </tr>
                </tbody>
                <%}}else{%>

                <td colspan="5">
                  <div
                    class="d-flex flex-column align-items-center justify-content-center"
                  >
                   
                    <i class="fa-regular fa-cart-plus fa-bounce"></i>
                    <h5 class="text-center mt-2">No items in cart</h5>
                  </div>
                </td>

                <%}%>
              </table>

              <!-- End .table table-wishlist --
              <!-- End .cart-bottom -->
            </div>
            <!-- End .col-lg-9 -->
            <aside class="col-lg-3">
              <div class="summary summary-cart">
                <h3 class="summary-title">Cart Total</h3>
                <!-- End .summary-title -->

                <table class="table table-summary">
                  <tbody>
                    <tr >
                      <td>Subtotal:</td>
                      <td id="subAmount"><%=totalAmount%></td>
                    </tr>
                    <!-- End .summary-subtotal -->
                    <tr class="summary-shipping">
                      <td>Shopping Charge:</td>
                      <td>free</td>
                    </tr>

                    <!-- End .summary-shipping-estimate -->

                    <tr class="summary-total">
                      <td>Total:</td>
                      <td id="totalAmount"><%=totalAmount %></td>


                    </tr>
                    <!-- End .summary-total -->
                  </tbody>
                </table>

                <!-- End .table table-summary -->

                <button
                    class="btn btn-outline-primary-2 btn-order btn-block"
                    onclick="proceedToCheckout()"
                  >PROCEED TO CHECKOUT<button>
              </div>
              <!-- End .summary -->

              <a
                href="/allproducts"
                class="btn btn-outline-dark-2 btn-block mb-3"
                ><span>CONTINUE SHOPPING</span><i class="icon-refresh"></i
              ></a>
            </aside>
            <!-- End .col-lg-3 -->
          </div>
          <!-- End .row -->
        </div>
        <!-- End .container -->
      </div>
      <!-- End .cart -->
    </div>
    <!-- End .page-content -->
  </main>
</div>

<!-- End .main -->
<%- include("../layouts/userFooter.ejs")%>
 <%-include("../layouts/userFooter2.ejs")%>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="path/to/inputSpinnerPlugin.js"></script>

<script>
 document.addEventListener("DOMContentLoaded", function () {
  const quantityInputs = document.querySelectorAll(".quantity-input");
  const totalPriceElements = document.querySelectorAll(".total-price");

  quantityInputs.forEach((input, index) => {
    const minusButton = input.parentElement.querySelector(".quantity-decrease123");
  
    const plusButton = input.parentElement.querySelector(".quantity-increase123");
    const productID = input.getAttribute("data-product-id");

    function updateMinusButtonStatus() {
      
      const quantity = parseInt(input.value, 10);
      
      if (quantity === 1) {
        minusButton.disabled = true;
      } else {
        minusButton.disabled = false;
      }
    }

    minusButton.addEventListener("click", function () {
      const quantity = parseInt(input.value, 10);
     
      if (quantity > 1) {
        const newQuantity = quantity - 1;
        handleQuantityUpdate(productID, newQuantity, index);
      }
    });

    plusButton.addEventListener("click", function () {
      const quantity = parseInt(input.value, 10);
      if (quantity <= 10) {
      const newQuantity = quantity + 1;
      handleQuantityUpdate(productID, newQuantity, index);
      }
    });
  });

  async function handleQuantityUpdate(productID, quantity, index) {
    try {
      const response = await fetch("/actionincart", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ product_id: productID, count: quantity }),
      });

      const data = await response.json();

      if (data&& data.message ==='Cart updated successfully') {
        
        // Update the input value after receiving the response
        quantityInputs[index].value = quantity;
       
        const totalPrice = data.amount;
totalPriceElements[index].textContent = ` ${totalPrice.toFixed(2)}`;


        // Update the subtotal and other UI elements
        updateSubtotal();
        
        
      } else {
        // console.error("Invalid response data:", data);
        console.log('errrr');
        // Handle the case where the server response is not as expected
        Swal.fire({
          icon: 'error',
          title: 'Error!',
          text: 'Failed to update cart quantity. Please try again.',
        });
      }
    } catch (error) {
      console.error("Error updating cart quantity:", error);
      // Handle the error or display an error message to the user
      Swal.fire({
        icon: 'error',
        title: 'Error!',
        text: `An error occurred: ${error.message || error}`,
      });
    }
  }

  function updateSubtotal() {
    const totalPrices = Array.from(totalPriceElements)
      .map((total) => parseFloat(total.textContent.replace(" ", "")))
      .reduce((acc, val) => acc + val, 0);
    document.getElementById("totalAmount").textContent = `${totalPrices.toFixed(2)}`;
    document.getElementById("subAmount").textContent = `${totalPrices.toFixed(2)}`;
  }
});

</script>
<script>
  function confirmDelete(productId, productCount) {
    Swal.fire({
      title: "Are you sure?",
      text: "You won't be able to revert this!",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: "Yes, delete it!"
    })
    
    .then((result) => {
      if (result.isConfirmed) {
        Swal.fire({
          title: "Deleted!",
          text: "Your file has been deleted.",
          icon: "success"
        });

        // If the user confirms, you can redirect or perform other actions here
        // For example, you can redirect to the delete URL with the parameters
        window.location.href = "/deletefromcart?id=" + productId + "&count=" + productCount;
      }
    });
  }
</script>

<!-- // ================ swal ============= -->
// Client-side script (Assuming you are using Swal for SweetAlert)
<script>
  async function proceedToCheckout() {
    try {
      // Fetch data to check if the cart is empty or if there are out-of-stock products
      const response = await fetch('/loadcheckout');
      const data = await response.json();

      if (data.cartEmpty) {
        // Show SweetAlert if the cart is empty
        Swal.fire({
          icon: 'error',
          title: 'Your cart is empty!',
          text: 'Please add items to your cart before proceeding to checkout.',
        });
      } else if (data.outOfStock) {
        // Show a message for out-of-stock products
        const outOfStockProducts = data.outOfStockProducts.map(item => item.product.name).join(', ');
       
        Swal.fire({
          icon: 'error',
          title: 'Some products are out of stock!',
          html: `The following products are out of stock: ${outOfStockProducts}.`,
        });
        document.getElementById("nostock").textContent= "not stock availible"
      } else if (data.cartItem) {
        // Redirect to the "/checkout" page if the cart is not empty and all products are in stock
        window.location.href = '/checkout';
      }
    } catch (error) {
      console.error('Error fetching cart data:', error);
      // Handle the error (e.g., show an error message)
    }
  }
</script>


<!-- ... (remaining HTML code) ... -->

<%- include("../layouts/footer.ejs")%> 
